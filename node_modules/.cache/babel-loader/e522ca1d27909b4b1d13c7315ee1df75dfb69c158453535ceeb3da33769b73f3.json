{"ast":null,"code":"import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  } else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["e0fn","e1fn","e2fn","e3fn","msfnz","mlfn","adjust_lon","adjust_lat","imlfn","EPSLN","init","Math","abs","lat1","lat2","temp","b","a","es","pow","e","sqrt","e0","e1","e2","e3","sinphi","sin","cosphi","cos","ms1","ml1","ns","ms2","ml2","g","ml0","lat0","rh","forward","p","lon","x","lat","y","rh1","sphere","ml","theta","long0","x0","y0","inverse","con","atan2","names"],"sources":["/home/chemy/final/node_modules/proj4/lib/projections/eqdc.js"],"sourcesContent":["import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}