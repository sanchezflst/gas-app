{"ast":null,"code":"import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if (Math.abs(dlon) <= EPSLN || Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs(Math.PI / dlon - dlon / Math.PI);\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = 3 * d / a1 / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["adjust_lon","HALF_PI","EPSLN","asinz","init","R","a","forward","p","lon","x","lat","y","dlon","long0","Math","abs","x0","y0","theta","PI","tan","al","asq","sinth","sin","costh","cos","g","gsq","m","msq","con","sqrt","q","inverse","xx","yy","xys","c1","c2","c3","a1","m1","th1","d","acos","names"],"sources":["/home/chemy/final/node_modules/proj4/lib/projections/vandg.js"],"sourcesContent":["import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,sBAAsB;AAE7C,SAAQC,OAAO,EAAEC,KAAK,QAAO,qBAAqB;AAElD,OAAOC,KAAK,MAAM,iBAAiB;;AAEnC;AACA;AACA,OAAO,SAASC,IAAIA,CAAA,EAAG;EACrB;EACA,IAAI,CAACC,CAAC,GAAG,IAAI,CAACC,CAAC;AACjB;AAEA,OAAO,SAASC,OAAOA,CAACC,CAAC,EAAE;EAEzB,IAAIC,GAAG,GAAGD,CAAC,CAACE,CAAC;EACb,IAAIC,GAAG,GAAGH,CAAC,CAACI,CAAC;;EAEb;AACF;EACE,IAAIC,IAAI,GAAGb,UAAU,CAACS,GAAG,GAAG,IAAI,CAACK,KAAK,CAAC;EACvC,IAAIJ,CAAC,EAAEE,CAAC;EAER,IAAIG,IAAI,CAACC,GAAG,CAACL,GAAG,CAAC,IAAIT,KAAK,EAAE;IAC1BQ,CAAC,GAAG,IAAI,CAACO,EAAE,GAAG,IAAI,CAACZ,CAAC,GAAGQ,IAAI;IAC3BD,CAAC,GAAG,IAAI,CAACM,EAAE;EACb;EACA,IAAIC,KAAK,GAAGhB,KAAK,CAAC,CAAC,GAAGY,IAAI,CAACC,GAAG,CAACL,GAAG,GAAGI,IAAI,CAACK,EAAE,CAAC,CAAC;EAC9C,IAAKL,IAAI,CAACC,GAAG,CAACH,IAAI,CAAC,IAAIX,KAAK,IAAMa,IAAI,CAACC,GAAG,CAACD,IAAI,CAACC,GAAG,CAACL,GAAG,CAAC,GAAGV,OAAO,CAAC,IAAIC,KAAM,EAAE;IAC7EQ,CAAC,GAAG,IAAI,CAACO,EAAE;IACX,IAAIN,GAAG,IAAI,CAAC,EAAE;MACZC,CAAC,GAAG,IAAI,CAACM,EAAE,GAAGH,IAAI,CAACK,EAAE,GAAG,IAAI,CAACf,CAAC,GAAGU,IAAI,CAACM,GAAG,CAAC,GAAG,GAAGF,KAAK,CAAC;IACxD,CAAC,MACI;MACHP,CAAC,GAAG,IAAI,CAACM,EAAE,GAAGH,IAAI,CAACK,EAAE,GAAG,IAAI,CAACf,CAAC,GAAG,CAACU,IAAI,CAACM,GAAG,CAAC,GAAG,GAAGF,KAAK,CAAC;IACzD;IACA;EACF;EACA,IAAIG,EAAE,GAAG,GAAG,GAAGP,IAAI,CAACC,GAAG,CAAED,IAAI,CAACK,EAAE,GAAGP,IAAI,GAAKA,IAAI,GAAGE,IAAI,CAACK,EAAG,CAAC;EAC5D,IAAIG,GAAG,GAAGD,EAAE,GAAGA,EAAE;EACjB,IAAIE,KAAK,GAAGT,IAAI,CAACU,GAAG,CAACN,KAAK,CAAC;EAC3B,IAAIO,KAAK,GAAGX,IAAI,CAACY,GAAG,CAACR,KAAK,CAAC;EAE3B,IAAIS,CAAC,GAAGF,KAAK,IAAIF,KAAK,GAAGE,KAAK,GAAG,CAAC,CAAC;EACnC,IAAIG,GAAG,GAAGD,CAAC,GAAGA,CAAC;EACf,IAAIE,CAAC,GAAGF,CAAC,IAAI,CAAC,GAAGJ,KAAK,GAAG,CAAC,CAAC;EAC3B,IAAIO,GAAG,GAAGD,CAAC,GAAGA,CAAC;EACf,IAAIE,GAAG,GAAGjB,IAAI,CAACK,EAAE,GAAG,IAAI,CAACf,CAAC,IAAIiB,EAAE,IAAIM,CAAC,GAAGG,GAAG,CAAC,GAAGhB,IAAI,CAACkB,IAAI,CAACV,GAAG,IAAIK,CAAC,GAAGG,GAAG,CAAC,IAAIH,CAAC,GAAGG,GAAG,CAAC,GAAG,CAACA,GAAG,GAAGR,GAAG,KAAKM,GAAG,GAAGE,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,GAAGR,GAAG,CAAC;EAChI,IAAIV,IAAI,GAAG,CAAC,EAAE;IACZmB,GAAG,GAAG,CAACA,GAAG;EACZ;EACAtB,CAAC,GAAG,IAAI,CAACO,EAAE,GAAGe,GAAG;EACjB;EACA,IAAIE,CAAC,GAAGX,GAAG,GAAGK,CAAC;EACfI,GAAG,GAAGjB,IAAI,CAACK,EAAE,GAAG,IAAI,CAACf,CAAC,IAAIyB,CAAC,GAAGI,CAAC,GAAGZ,EAAE,GAAGP,IAAI,CAACkB,IAAI,CAAC,CAACF,GAAG,GAAGR,GAAG,KAAKA,GAAG,GAAG,CAAC,CAAC,GAAGW,CAAC,GAAGA,CAAC,CAAC,CAAC,IAAIH,GAAG,GAAGR,GAAG,CAAC;EAChG,IAAIZ,GAAG,IAAI,CAAC,EAAE;IACZ;IACAC,CAAC,GAAG,IAAI,CAACM,EAAE,GAAGc,GAAG;EACnB,CAAC,MACI;IACH;IACApB,CAAC,GAAG,IAAI,CAACM,EAAE,GAAGc,GAAG;EACnB;EACAxB,CAAC,CAACE,CAAC,GAAGA,CAAC;EACPF,CAAC,CAACI,CAAC,GAAGA,CAAC;EACP,OAAOJ,CAAC;AACV;;AAEA;AACA;AACA,OAAO,SAAS2B,OAAOA,CAAC3B,CAAC,EAAE;EACzB,IAAIC,GAAG,EAAEE,GAAG;EACZ,IAAIyB,EAAE,EAAEC,EAAE,EAAEC,GAAG,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EAC3B,IAAIC,EAAE;EACN,IAAIC,EAAE;EACN,IAAIX,GAAG;EACP,IAAIY,GAAG;EACP,IAAIC,CAAC;;EAEL;AACF;EACErC,CAAC,CAACE,CAAC,IAAI,IAAI,CAACO,EAAE;EACdT,CAAC,CAACI,CAAC,IAAI,IAAI,CAACM,EAAE;EACdc,GAAG,GAAGjB,IAAI,CAACK,EAAE,GAAG,IAAI,CAACf,CAAC;EACtB+B,EAAE,GAAG5B,CAAC,CAACE,CAAC,GAAGsB,GAAG;EACdK,EAAE,GAAG7B,CAAC,CAACI,CAAC,GAAGoB,GAAG;EACdM,GAAG,GAAGF,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE;EACvBE,EAAE,GAAG,CAACxB,IAAI,CAACC,GAAG,CAACqB,EAAE,CAAC,IAAI,CAAC,GAAGC,GAAG,CAAC;EAC9BE,EAAE,GAAGD,EAAE,GAAG,CAAC,GAAGF,EAAE,GAAGA,EAAE,GAAGD,EAAE,GAAGA,EAAE;EAC/BK,EAAE,GAAG,CAAC,CAAC,GAAGF,EAAE,GAAG,CAAC,GAAG,CAAC,GAAGF,EAAE,GAAGA,EAAE,GAAGC,GAAG,GAAGA,GAAG;EAC1CO,CAAC,GAAGR,EAAE,GAAGA,EAAE,GAAGI,EAAE,GAAG,CAAC,CAAC,GAAGD,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAAG,CAAC,GAAGF,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGA,EAAE,IAAI,EAAE;EACjFC,EAAE,GAAG,CAACH,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAG,CAAC,GAAGC,EAAE,IAAIA,EAAE;EACjCE,EAAE,GAAG,CAAC,GAAG5B,IAAI,CAACkB,IAAI,CAAC,CAACS,EAAE,GAAG,CAAC,CAAC;EAC3BV,GAAG,GAAK,CAAC,GAAGa,CAAC,GAAIH,EAAE,GAAIC,EAAE;EACzB,IAAI5B,IAAI,CAACC,GAAG,CAACgB,GAAG,CAAC,GAAG,CAAC,EAAE;IACrB,IAAIA,GAAG,IAAI,CAAC,EAAE;MACZA,GAAG,GAAG,CAAC;IACT,CAAC,MACI;MACHA,GAAG,GAAG,CAAC,CAAC;IACV;EACF;EACAY,GAAG,GAAG7B,IAAI,CAAC+B,IAAI,CAACd,GAAG,CAAC,GAAG,CAAC;EACxB,IAAIxB,CAAC,CAACI,CAAC,IAAI,CAAC,EAAE;IACZD,GAAG,GAAG,CAAC,CAACgC,EAAE,GAAG5B,IAAI,CAACY,GAAG,CAACiB,GAAG,GAAG7B,IAAI,CAACK,EAAE,GAAG,CAAC,CAAC,GAAGoB,EAAE,GAAG,CAAC,GAAGC,EAAE,IAAI1B,IAAI,CAACK,EAAE;EACnE,CAAC,MACI;IACHT,GAAG,GAAG,EAAE,CAACgC,EAAE,GAAG5B,IAAI,CAACY,GAAG,CAACiB,GAAG,GAAG7B,IAAI,CAACK,EAAE,GAAG,CAAC,CAAC,GAAGoB,EAAE,GAAG,CAAC,GAAGC,EAAE,CAAC,GAAG1B,IAAI,CAACK,EAAE;EACpE;EAEA,IAAIL,IAAI,CAACC,GAAG,CAACoB,EAAE,CAAC,GAAGlC,KAAK,EAAE;IACxBO,GAAG,GAAG,IAAI,CAACK,KAAK;EAClB,CAAC,MACI;IACHL,GAAG,GAAGT,UAAU,CAAC,IAAI,CAACc,KAAK,GAAGC,IAAI,CAACK,EAAE,IAAIkB,GAAG,GAAG,CAAC,GAAGvB,IAAI,CAACkB,IAAI,CAAC,CAAC,GAAG,CAAC,IAAIG,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC,GAAGC,GAAG,GAAGA,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGF,EAAE,CAAC;EAClH;EAEA5B,CAAC,CAACE,CAAC,GAAGD,GAAG;EACTD,CAAC,CAACI,CAAC,GAAGD,GAAG;EACT,OAAOH,CAAC;AACV;AAEA,OAAO,IAAIuC,KAAK,GAAG,CAAC,mBAAmB,EAAE,eAAe,EAAE,OAAO,CAAC;AAClE,eAAe;EACb3C,IAAI,EAAEA,IAAI;EACVG,OAAO,EAAEA,OAAO;EAChB4B,OAAO,EAAEA,OAAO;EAChBY,KAAK,EAAEA;AACT,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}