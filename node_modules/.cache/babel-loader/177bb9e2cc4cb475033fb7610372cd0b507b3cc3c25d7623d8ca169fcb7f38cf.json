{"ast":null,"code":"export default parseString;\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function () {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char);\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function (char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' + char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function (char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n    return;\n  }\n};\nParser.prototype.number = function (char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' + char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function (char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function (char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' + char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function (char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' + char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function () {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' + this.text + '\". State is ' + this.state);\n};\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}","map":{"version":3,"names":["parseString","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","Error","trim","level","place","root","stack","currentObject","state","prototype","readCharicter","char","test","length","neutral","quoted","afterquote","number","word","afterItem","push","pop","parseFloat","newObjects","output","txt","parser"],"sources":["/home/chemy/final/node_modules/wkt-parser/parser.js"],"sourcesContent":["export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}