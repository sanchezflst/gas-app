{"ast":null,"code":"import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      } else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        } else {\n          defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n    return;\n  }\n}\nglobals(defs);\nexport default defs;","map":{"version":3,"names":["globals","parseProj","wkt","defs","name","that","arguments","length","def","charAt","Array","isArray","map","v","apply","EPSG","ESRI","IAU2000","console","log"],"sources":["/home/chemy/final/node_modules/proj4/lib/defs.js"],"sourcesContent":["import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,UAAU;AAC9B,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,GAAG,MAAM,YAAY;AAE5B,SAASC,IAAIA,CAACC,IAAI,EAAE;EAClB;EACA,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1B,IAAIC,GAAG,GAAGF,SAAS,CAAC,CAAC,CAAC;IACtB,IAAI,OAAOE,GAAG,KAAK,QAAQ,EAAE;MAC3B,IAAIA,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACzBN,IAAI,CAACC,IAAI,CAAC,GAAGH,SAAS,CAACK,SAAS,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,MACI;QACHH,IAAI,CAACC,IAAI,CAAC,GAAGF,GAAG,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC;MAChC;IACF,CAAC,MAAM;MACLH,IAAI,CAACC,IAAI,CAAC,GAAGI,GAAG;IAClB;EACF,CAAC,MACI,IAAIF,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAC/B,IAAIG,KAAK,CAACC,OAAO,CAACP,IAAI,CAAC,EAAE;MACvB,OAAOA,IAAI,CAACQ,GAAG,CAAC,UAASC,CAAC,EAAE;QAC1B,IAAIH,KAAK,CAACC,OAAO,CAACE,CAAC,CAAC,EAAE;UACpBV,IAAI,CAACW,KAAK,CAACT,IAAI,EAAEQ,CAAC,CAAC;QACrB,CAAC,MACI;UACHV,IAAI,CAACU,CAAC,CAAC;QACT;MACF,CAAC,CAAC;IACJ,CAAC,MACI,IAAI,OAAOT,IAAI,KAAK,QAAQ,EAAE;MACjC,IAAIA,IAAI,IAAID,IAAI,EAAE;QAChB,OAAOA,IAAI,CAACC,IAAI,CAAC;MACnB;IACF,CAAC,MACI,IAAI,MAAM,IAAIA,IAAI,EAAE;MACvBD,IAAI,CAAC,OAAO,GAAGC,IAAI,CAACW,IAAI,CAAC,GAAGX,IAAI;IAClC,CAAC,MACI,IAAI,MAAM,IAAIA,IAAI,EAAE;MACvBD,IAAI,CAAC,OAAO,GAAGC,IAAI,CAACY,IAAI,CAAC,GAAGZ,IAAI;IAClC,CAAC,MACI,IAAI,SAAS,IAAIA,IAAI,EAAE;MAC1BD,IAAI,CAAC,UAAU,GAAGC,IAAI,CAACa,OAAO,CAAC,GAAGb,IAAI;IACxC,CAAC,MACI;MACHc,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;IACnB;IACA;EACF;AAGF;AACAJ,OAAO,CAACG,IAAI,CAAC;AACb,eAAeA,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}