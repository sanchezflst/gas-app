{"ast":null,"code":"import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan(Math.PI / 4 + lat / 2.5)) * 1.25;\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["adjust_lon","init","forward","p","lon","x","lat","y","dlon","long0","x0","a","y0","Math","log","tan","PI","inverse","atan","exp","names"],"sources":["/home/chemy/final/node_modules/proj4/lib/projections/mill.js"],"sourcesContent":["import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,sBAAsB;;AAE7C;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA,OAAO,SAASC,IAAIA,CAAA,EAAG;EACrB;AAAA;;AAGF;AACA;AACA,OAAO,SAASC,OAAOA,CAACC,CAAC,EAAE;EACzB,IAAIC,GAAG,GAAGD,CAAC,CAACE,CAAC;EACb,IAAIC,GAAG,GAAGH,CAAC,CAACI,CAAC;EACb;AACF;EACE,IAAIC,IAAI,GAAGR,UAAU,CAACI,GAAG,GAAG,IAAI,CAACK,KAAK,CAAC;EACvC,IAAIJ,CAAC,GAAG,IAAI,CAACK,EAAE,GAAG,IAAI,CAACC,CAAC,GAAGH,IAAI;EAC/B,IAAID,CAAC,GAAG,IAAI,CAACK,EAAE,GAAG,IAAI,CAACD,CAAC,GAAGE,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAEF,IAAI,CAACG,EAAE,GAAG,CAAC,GAAKV,GAAG,GAAG,GAAI,CAAC,CAAC,GAAG,IAAI;EAEjFH,CAAC,CAACE,CAAC,GAAGA,CAAC;EACPF,CAAC,CAACI,CAAC,GAAGA,CAAC;EACP,OAAOJ,CAAC;AACV;;AAEA;AACA;AACA,OAAO,SAASc,OAAOA,CAACd,CAAC,EAAE;EACzBA,CAAC,CAACE,CAAC,IAAI,IAAI,CAACK,EAAE;EACdP,CAAC,CAACI,CAAC,IAAI,IAAI,CAACK,EAAE;EAEd,IAAIR,GAAG,GAAGJ,UAAU,CAAC,IAAI,CAACS,KAAK,GAAGN,CAAC,CAACE,CAAC,GAAG,IAAI,CAACM,CAAC,CAAC;EAC/C,IAAIL,GAAG,GAAG,GAAG,IAAIO,IAAI,CAACK,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,GAAGhB,CAAC,CAACI,CAAC,GAAG,IAAI,CAACI,CAAC,CAAC,CAAC,GAAGE,IAAI,CAACG,EAAE,GAAG,CAAC,CAAC;EAEvEb,CAAC,CAACE,CAAC,GAAGD,GAAG;EACTD,CAAC,CAACI,CAAC,GAAGD,GAAG;EACT,OAAOH,CAAC;AACV;AAEA,OAAO,IAAIiB,KAAK,GAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC;AACjD,eAAe;EACbnB,IAAI,EAAEA,IAAI;EACVC,OAAO,EAAEA,OAAO;EAChBe,OAAO,EAAEA,OAAO;EAChBG,KAAK,EAAEA;AACT,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}