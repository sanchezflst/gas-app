{"ast":null,"code":"import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + p.x / this.a / Math.cos(this.lat_ts));\n    lat = Math.asin(p.y / this.a * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["adjust_lon","qsfnz","msfnz","iqsfnz","init","sphere","k0","e","Math","sin","lat_ts","cos","forward","p","lon","x","lat","y","dlon","long0","x0","a","y0","qs","inverse","asin","names"],"sources":["/home/chemy/final/node_modules/proj4/lib/projections/cea.js"],"sourcesContent":["import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}