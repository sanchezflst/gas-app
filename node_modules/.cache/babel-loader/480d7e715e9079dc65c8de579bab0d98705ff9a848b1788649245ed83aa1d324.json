{"ast":null,"code":"import msfnz from '../common/msfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["msfnz","adjust_lon","tsfnz","phi2z","FORTPI","R2D","EPSLN","HALF_PI","init","con","b","a","es","x0","y0","e","Math","sqrt","lat_ts","sphere","k0","cos","sin","k","forward","p","lon","x","lat","y","abs","long0","log","tan","sinphi","ts","inverse","atan","exp","names"],"sources":["/home/chemy/final/node_modules/proj4/lib/projections/merc.js"],"sourcesContent":["import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAAQC,MAAM,EAAEC,GAAG,EAAEC,KAAK,EAAEC,OAAO,QAAO,qBAAqB;AAC/D,OAAO,SAASC,IAAIA,CAAA,EAAG;EACrB,IAAIC,GAAG,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACC,CAAC;EACzB,IAAI,CAACC,EAAE,GAAG,CAAC,GAAGH,GAAG,GAAGA,GAAG;EACvB,IAAG,EAAE,IAAI,IAAI,IAAI,CAAC,EAAC;IACjB,IAAI,CAACI,EAAE,GAAG,CAAC;EACb;EACA,IAAG,EAAE,IAAI,IAAI,IAAI,CAAC,EAAC;IACjB,IAAI,CAACC,EAAE,GAAG,CAAC;EACb;EACA,IAAI,CAACC,CAAC,GAAGC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACL,EAAE,CAAC;EAC3B,IAAI,IAAI,CAACM,MAAM,EAAE;IACf,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,IAAI,CAACC,EAAE,GAAGJ,IAAI,CAACK,GAAG,CAAC,IAAI,CAACH,MAAM,CAAC;IACjC,CAAC,MACI;MACH,IAAI,CAACE,EAAE,GAAGpB,KAAK,CAAC,IAAI,CAACe,CAAC,EAAEC,IAAI,CAACM,GAAG,CAAC,IAAI,CAACJ,MAAM,CAAC,EAAEF,IAAI,CAACK,GAAG,CAAC,IAAI,CAACH,MAAM,CAAC,CAAC;IACvE;EACF,CAAC,MACI;IACH,IAAI,CAAC,IAAI,CAACE,EAAE,EAAE;MACZ,IAAI,IAAI,CAACG,CAAC,EAAE;QACV,IAAI,CAACH,EAAE,GAAG,IAAI,CAACG,CAAC;MAClB,CAAC,MACI;QACH,IAAI,CAACH,EAAE,GAAG,CAAC;MACb;IACF;EACF;AACF;;AAEA;AACA;;AAEA,OAAO,SAASI,OAAOA,CAACC,CAAC,EAAE;EACzB,IAAIC,GAAG,GAAGD,CAAC,CAACE,CAAC;EACb,IAAIC,GAAG,GAAGH,CAAC,CAACI,CAAC;EACb;EACA,IAAID,GAAG,GAAGvB,GAAG,GAAG,EAAE,IAAIuB,GAAG,GAAGvB,GAAG,GAAG,CAAC,EAAE,IAAIqB,GAAG,GAAGrB,GAAG,GAAG,GAAG,IAAIqB,GAAG,GAAGrB,GAAG,GAAG,CAAC,GAAG,EAAE;IAC5E,OAAO,IAAI;EACb;EAEA,IAAIsB,CAAC,EAAEE,CAAC;EACR,IAAIb,IAAI,CAACc,GAAG,CAACd,IAAI,CAACc,GAAG,CAACF,GAAG,CAAC,GAAGrB,OAAO,CAAC,IAAID,KAAK,EAAE;IAC9C,OAAO,IAAI;EACb,CAAC,MACI;IACH,IAAI,IAAI,CAACa,MAAM,EAAE;MACfQ,CAAC,GAAG,IAAI,CAACd,EAAE,GAAG,IAAI,CAACF,CAAC,GAAG,IAAI,CAACS,EAAE,GAAGnB,UAAU,CAACyB,GAAG,GAAG,IAAI,CAACK,KAAK,CAAC;MAC7DF,CAAC,GAAG,IAAI,CAACf,EAAE,GAAG,IAAI,CAACH,CAAC,GAAG,IAAI,CAACS,EAAE,GAAGJ,IAAI,CAACgB,GAAG,CAAChB,IAAI,CAACiB,GAAG,CAAC7B,MAAM,GAAG,GAAG,GAAGwB,GAAG,CAAC,CAAC;IACzE,CAAC,MACI;MACH,IAAIM,MAAM,GAAGlB,IAAI,CAACM,GAAG,CAACM,GAAG,CAAC;MAC1B,IAAIO,EAAE,GAAGjC,KAAK,CAAC,IAAI,CAACa,CAAC,EAAEa,GAAG,EAAEM,MAAM,CAAC;MACnCP,CAAC,GAAG,IAAI,CAACd,EAAE,GAAG,IAAI,CAACF,CAAC,GAAG,IAAI,CAACS,EAAE,GAAGnB,UAAU,CAACyB,GAAG,GAAG,IAAI,CAACK,KAAK,CAAC;MAC7DF,CAAC,GAAG,IAAI,CAACf,EAAE,GAAG,IAAI,CAACH,CAAC,GAAG,IAAI,CAACS,EAAE,GAAGJ,IAAI,CAACgB,GAAG,CAACG,EAAE,CAAC;IAC/C;IACAV,CAAC,CAACE,CAAC,GAAGA,CAAC;IACPF,CAAC,CAACI,CAAC,GAAGA,CAAC;IACP,OAAOJ,CAAC;EACV;AACF;;AAEA;AACA;AACA,OAAO,SAASW,OAAOA,CAACX,CAAC,EAAE;EAEzB,IAAIE,CAAC,GAAGF,CAAC,CAACE,CAAC,GAAG,IAAI,CAACd,EAAE;EACrB,IAAIgB,CAAC,GAAGJ,CAAC,CAACI,CAAC,GAAG,IAAI,CAACf,EAAE;EACrB,IAAIY,GAAG,EAAEE,GAAG;EAEZ,IAAI,IAAI,CAACT,MAAM,EAAE;IACfS,GAAG,GAAGrB,OAAO,GAAG,CAAC,GAAGS,IAAI,CAACqB,IAAI,CAACrB,IAAI,CAACsB,GAAG,CAAC,CAACT,CAAC,IAAI,IAAI,CAAClB,CAAC,GAAG,IAAI,CAACS,EAAE,CAAC,CAAC,CAAC;EAClE,CAAC,MACI;IACH,IAAIe,EAAE,GAAGnB,IAAI,CAACsB,GAAG,CAAC,CAACT,CAAC,IAAI,IAAI,CAAClB,CAAC,GAAG,IAAI,CAACS,EAAE,CAAC,CAAC;IAC1CQ,GAAG,GAAGzB,KAAK,CAAC,IAAI,CAACY,CAAC,EAAEoB,EAAE,CAAC;IACvB,IAAIP,GAAG,KAAK,CAAC,IAAI,EAAE;MACjB,OAAO,IAAI;IACb;EACF;EACAF,GAAG,GAAGzB,UAAU,CAAC,IAAI,CAAC8B,KAAK,GAAGJ,CAAC,IAAI,IAAI,CAAChB,CAAC,GAAG,IAAI,CAACS,EAAE,CAAC,CAAC;EAErDK,CAAC,CAACE,CAAC,GAAGD,GAAG;EACTD,CAAC,CAACI,CAAC,GAAGD,GAAG;EACT,OAAOH,CAAC;AACV;AAEA,OAAO,IAAIc,KAAK,GAAG,CAAC,UAAU,EAAE,uCAAuC,EAAE,cAAc,EAAE,2BAA2B,EAAE,MAAM,CAAC;AAC7H,eAAe;EACb/B,IAAI,EAAEA,IAAI;EACVgB,OAAO,EAAEA,OAAO;EAChBY,OAAO,EAAEA,OAAO;EAChBG,KAAK,EAAEA;AACT,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}