{"ast":null,"code":"export default function (crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n      case 'w':\n        out[t] = -v;\n        break;\n      case 'n':\n        out[t] = v;\n        break;\n      case 's':\n        out[t] = -v;\n        break;\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n        break;\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n        break;\n      default:\n        //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n  return out;\n}","map":{"version":3,"names":["crs","denorm","point","xin","x","yin","y","zin","z","v","t","i","out","undefined","indexOf","axis"],"sources":["/home/chemy/final/node_modules/proj4/lib/adjust_axis.js"],"sourcesContent":["export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n"],"mappings":"AAAA,eAAe,UAASA,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAE;EAC1C,IAAIC,GAAG,GAAGD,KAAK,CAACE,CAAC;IACfC,GAAG,GAAGH,KAAK,CAACI,CAAC;IACbC,GAAG,GAAGL,KAAK,CAACM,CAAC,IAAI,GAAG;EACtB,IAAIC,CAAC,EAAEC,CAAC,EAAEC,CAAC;EACX,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZ,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACtB,IAAIV,MAAM,IAAIU,CAAC,KAAK,CAAC,IAAIT,KAAK,CAACM,CAAC,KAAKK,SAAS,EAAE;MAC9C;IACF;IACA,IAAIF,CAAC,KAAK,CAAC,EAAE;MACXF,CAAC,GAAGN,GAAG;MACP,IAAI,IAAI,CAACW,OAAO,CAACd,GAAG,CAACe,IAAI,CAACJ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QACpCD,CAAC,GAAG,GAAG;MACT,CAAC,MAAM;QACLA,CAAC,GAAG,GAAG;MACT;IAEF,CAAC,MACI,IAAIC,CAAC,KAAK,CAAC,EAAE;MAChBF,CAAC,GAAGJ,GAAG;MACP,IAAI,IAAI,CAACS,OAAO,CAACd,GAAG,CAACe,IAAI,CAACJ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QACpCD,CAAC,GAAG,GAAG;MACT,CAAC,MAAM;QACLA,CAAC,GAAG,GAAG;MACT;IACF,CAAC,MACI;MACHD,CAAC,GAAGF,GAAG;MACPG,CAAC,GAAG,GAAG;IACT;IACA,QAAQV,GAAG,CAACe,IAAI,CAACJ,CAAC,CAAC;MACnB,KAAK,GAAG;QACNC,GAAG,CAACF,CAAC,CAAC,GAAGD,CAAC;QACV;MACF,KAAK,GAAG;QACNG,GAAG,CAACF,CAAC,CAAC,GAAG,CAACD,CAAC;QACX;MACF,KAAK,GAAG;QACNG,GAAG,CAACF,CAAC,CAAC,GAAGD,CAAC;QACV;MACF,KAAK,GAAG;QACNG,GAAG,CAACF,CAAC,CAAC,GAAG,CAACD,CAAC;QACX;MACF,KAAK,GAAG;QACN,IAAIP,KAAK,CAACQ,CAAC,CAAC,KAAKG,SAAS,EAAE;UAC1BD,GAAG,CAACJ,CAAC,GAAGC,CAAC;QACX;QACA;MACF,KAAK,GAAG;QACN,IAAIP,KAAK,CAACQ,CAAC,CAAC,KAAKG,SAAS,EAAE;UAC1BD,GAAG,CAACJ,CAAC,GAAG,CAACC,CAAC;QACZ;QACA;MACF;QACE;QACA,OAAO,IAAI;IACb;EACF;EACA,OAAOG,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}