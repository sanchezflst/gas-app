{"ast":null,"code":"function mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n  var out = value.reduce(function (newObj, item) {\n    sExpr(item, newObj);\n    return newObj;\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}","map":{"version":3,"names":["mapit","obj","key","value","Array","isArray","unshift","thing","out","reduce","newObj","item","sExpr","v","shift","length","push","i","name","toLowerCase","convert","a","rf","type"],"sources":["/home/chemy/final/node_modules/wkt-parser/process.js"],"sourcesContent":["\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}