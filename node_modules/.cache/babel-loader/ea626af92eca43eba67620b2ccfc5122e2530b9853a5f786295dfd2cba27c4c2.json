{"ast":null,"code":"var _jsxFileName = \"/home/chemy/final/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Importing the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initializing states for gas stations, loading, and error\n  const [gasStations, setGasStations] = useState([]); // Initialize with an empty array\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const proxyUrl = 'https://your-proxy-url.com/';\n  const targetUrl = 'your-target-api-url'; // Replace with your actual target API URL\n\n  // Fetch gas stations data when location is submitted\n  const handleLocationSubmit = event => {\n    event.preventDefault();\n\n    // Check if gas stations data is available\n    if (!gasStations || gasStations.length === 0) {\n      console.error(\"Gas stations data is not available.\");\n      return; // Exit early if no data is available\n    }\n\n    // Your form submission or location-related logic\n    console.log('Form submitted with data:', gasStations);\n  };\n\n  // Fetch data from the API\n  const fetchData = () => {\n    setLoading(true);\n    setError(null);\n    axios.get(proxyUrl + encodeURIComponent(targetUrl)) // Use proxy and encode URL\n    .then(response => {\n      // Log the response to inspect its structure\n      console.log(response.data);\n\n      // Parse the response if necessary (adjust based on actual response structure)\n      const data = JSON.parse(response.data.contents); // Make sure contents is a valid JSON string\n\n      // Check if the data structure contains the expected 'features' array\n      if (data && data.features && Array.isArray(data.features)) {\n        setGasStations(data.features);\n      } else {\n        console.error(\"Unexpected data structure:\", data);\n        setError(\"Data format is incorrect\");\n      }\n      setLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setError(error);\n      setLoading(false);\n    });\n  };\n\n  // Run fetchData when the component mounts (or when needed)\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gas-stations-list\",\n      children: gasStations.length > 0 ? gasStations.map((station, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gas-station-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: station.properties.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tel\\xE9fono: \", station.properties.telefono]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Direcci\\xF3n: \", station.properties.direccion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Coordenadas: \", station.geometry.coordinates[0], \", \", station.geometry.coordinates[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No gas stations available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLocationSubmit,\n      className: \"location-form\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l98ZeX+pg7OLCPtoXfNBJyB4m90=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","gasStations","setGasStations","loading","setLoading","error","setError","proxyUrl","targetUrl","handleLocationSubmit","event","preventDefault","length","console","log","fetchData","get","encodeURIComponent","then","response","data","JSON","parse","contents","features","Array","isArray","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","station","index","properties","nombre","telefono","direccion","geometry","coordinates","onSubmit","type","_c","$RefreshReg$"],"sources":["/home/chemy/final/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Importing the CSS file\n\nfunction App() {\n  // Initializing states for gas stations, loading, and error\n  const [gasStations, setGasStations] = useState([]); // Initialize with an empty array\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const proxyUrl = 'https://your-proxy-url.com/';\n  const targetUrl = 'your-target-api-url'; // Replace with your actual target API URL\n\n  // Fetch gas stations data when location is submitted\n  const handleLocationSubmit = (event) => {\n    event.preventDefault();\n\n    // Check if gas stations data is available\n    if (!gasStations || gasStations.length === 0) {\n      console.error(\"Gas stations data is not available.\");\n      return; // Exit early if no data is available\n    }\n\n    // Your form submission or location-related logic\n    console.log('Form submitted with data:', gasStations);\n  };\n\n  // Fetch data from the API\n  const fetchData = () => {\n    setLoading(true);\n    setError(null);\n\n    axios\n      .get(proxyUrl + encodeURIComponent(targetUrl)) // Use proxy and encode URL\n      .then((response) => {\n        // Log the response to inspect its structure\n        console.log(response.data);\n\n        // Parse the response if necessary (adjust based on actual response structure)\n        const data = JSON.parse(response.data.contents); // Make sure contents is a valid JSON string\n\n        // Check if the data structure contains the expected 'features' array\n        if (data && data.features && Array.isArray(data.features)) {\n          setGasStations(data.features);\n        } else {\n          console.error(\"Unexpected data structure:\", data);\n          setError(\"Data format is incorrect\");\n        }\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(error);\n        setError(error);\n        setLoading(false);\n      });\n  };\n\n  // Run fetchData when the component mounts (or when needed)\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      {loading ? (\n        <p className=\"loading-message\">Loading...</p>\n      ) : error ? (\n        <p className=\"error-message\">Error: {error.message}</p>\n      ) : (\n        <div className=\"gas-stations-list\">\n          {gasStations.length > 0 ? (\n            gasStations.map((station, index) => (\n              <div key={index} className=\"gas-station-card\">\n                <h3>{station.properties.nombre}</h3>\n                <p>Teléfono: {station.properties.telefono}</p>\n                <p>Dirección: {station.properties.direccion}</p>\n                <p>\n                  Coordenadas: {station.geometry.coordinates[0]}, {station.geometry.coordinates[1]}\n                </p>\n                {/* If you want to calculate distance to a certain point, you can do that here */}\n                {/* Example for displaying distance: */}\n                {/* <p>Distancia: {calculateDistance(station.geometry.coordinates)}</p> */}\n              </div>\n            ))\n          ) : (\n            <p>No gas stations available</p>\n          )}\n        </div>\n      )}\n\n      {/* Form submission logic */}\n      <form onSubmit={handleLocationSubmit} className=\"location-form\">\n        <button type=\"submit\" className=\"submit-button\">Submit Location</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}