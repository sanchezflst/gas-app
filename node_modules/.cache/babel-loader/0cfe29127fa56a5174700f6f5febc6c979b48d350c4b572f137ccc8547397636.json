{"ast":null,"code":"import { HALF_PI } from '../constants/values';\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return -1 * HALF_PI;\n    } else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}","map":{"version":3,"names":["HALF_PI","eccent","q","temp","Math","log","abs","phi","asin","dphi","sin_phi","cos_phi","con","i","sin","cos","pow","NaN"],"sources":["/home/chemy/final/node_modules/proj4/lib/common/iqsfnz.js"],"sourcesContent":["import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n"],"mappings":"AAAA,SAAQA,OAAO,QAAO,qBAAqB;AAE3C,eAAe,UAASC,MAAM,EAAEC,CAAC,EAAE;EACjC,IAAIC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGF,MAAM,GAAGA,MAAM,KAAK,CAAC,GAAGA,MAAM,CAAC,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,GAAGJ,MAAM,KAAK,CAAC,GAAGA,MAAM,CAAC,CAAC;EAC3F,IAAIG,IAAI,CAACE,GAAG,CAACF,IAAI,CAACE,GAAG,CAACJ,CAAC,CAAC,GAAGC,IAAI,CAAC,GAAG,MAAM,EAAE;IACzC,IAAID,CAAC,GAAG,CAAC,EAAE;MACT,OAAQ,CAAC,CAAC,GAAGF,OAAO;IACtB,CAAC,MACI;MACH,OAAOA,OAAO;IAChB;EACF;EACA;EACA,IAAIO,GAAG,GAAGH,IAAI,CAACI,IAAI,CAAC,GAAG,GAAGN,CAAC,CAAC;EAC5B,IAAIO,IAAI;EACR,IAAIC,OAAO;EACX,IAAIC,OAAO;EACX,IAAIC,GAAG;EACP,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC3BH,OAAO,GAAGN,IAAI,CAACU,GAAG,CAACP,GAAG,CAAC;IACvBI,OAAO,GAAGP,IAAI,CAACW,GAAG,CAACR,GAAG,CAAC;IACvBK,GAAG,GAAGX,MAAM,GAAGS,OAAO;IACtBD,IAAI,GAAGL,IAAI,CAACY,GAAG,CAAC,CAAC,GAAGJ,GAAG,GAAGA,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,GAAGD,OAAO,CAAC,IAAIT,CAAC,IAAI,CAAC,GAAGD,MAAM,GAAGA,MAAM,CAAC,GAAGS,OAAO,IAAI,CAAC,GAAGE,GAAG,GAAGA,GAAG,CAAC,GAAG,GAAG,GAAGX,MAAM,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,GAAGO,GAAG,KAAK,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC;IAC5JL,GAAG,IAAIE,IAAI;IACX,IAAIL,IAAI,CAACE,GAAG,CAACG,IAAI,CAAC,IAAI,YAAY,EAAE;MAClC,OAAOF,GAAG;IACZ;EACF;;EAEA;EACA,OAAOU,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}