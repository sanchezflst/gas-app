{"ast":null,"code":"import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n}\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > 2 * HALF_PI * this.a) {\n      return;\n    }\n    z = rh / this.a;\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + p.y * sinz * this.cos_p12 / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n}\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["adjust_lon","HALF_PI","EPSLN","mlfn","e0fn","e1fn","e2fn","e3fn","gN","asinz","imlfn","init","sin_p12","Math","sin","lat0","cos_p12","cos","forward","p","lon","x","lat","y","sinphi","cosphi","dlon","long0","e0","e1","e2","e3","Mlp","Ml","tanphi","Nl1","Nl","psi","Az","G","H","GH","Hs","c","kp","cos_c","s","s2","s3","s4","s5","sphere","abs","x0","a","y0","acos","es","e","atan","atan2","tan","asin","PI","sqrt","inverse","rh","z","sinz","cosz","con","M","N1","cosAz","tmp","A","B","D","Ee","F","sinpsi","pow","names"],"sources":["/home/chemy/final/node_modules/proj4/lib/projections/aeqd.js"],"sourcesContent":["import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}