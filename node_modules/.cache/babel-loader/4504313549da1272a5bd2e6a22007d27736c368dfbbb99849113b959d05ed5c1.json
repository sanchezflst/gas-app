{"ast":null,"code":"var _jsxFileName = \"/home/chemy/gas-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport gasStationsData from './gasStationsData.json'; // Updated JSON file name\n\n// Haversine Formula to calculate the distance between two coordinates\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst haversineDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // Earth's radius in km\n  const toRad = x => x * Math.PI / 180; // Convert degrees to radians\n\n  const deltaLat = toRad(lat2 - lat1);\n  const deltaLon = toRad(lon2 - lon1);\n  const a = Math.sin(deltaLat / 2) * Math.sin(deltaLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(deltaLon / 2) * Math.sin(deltaLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c; // Distance in km\n};\nfunction App() {\n  _s();\n  const [gasStations, setGasStations] = useState([]); // List of gas stations\n  const [userLat, setUserLat] = useState(\"\"); // User's latitude\n  const [userLon, setUserLon] = useState(\"\"); // User's longitude\n  const [sortedStations, setSortedStations] = useState([]); // Sorted gas stations by distance\n  const [filterName, setFilterName] = useState(\"\"); // Search filter for gas station name\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  useEffect(() => {\n    // Fetch gas station data from the provided URL (can be a proxy if CORS is an issue)\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"https://api.allorigins.win/get?url=\" + encodeURIComponent(\"https://opendata.alcoi.org/data/dataset/eaa35b18-783f-425f-be0d-e469188b487e/resource/fb583582-0a7b-4ae1-a515-dd01d094cf72/download/gasolineras.geojson\"));\n        const data = JSON.parse(response.data.contents);\n        setGasStations(data.features);\n      } catch (err) {\n        setError(\"Error loading gas stations. Falling back to local data.\");\n        setGasStations(gasStationsData.features); // Use the imported local JSON as fallback\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  const handleLocationSubmit = e => {\n    e.preventDefault();\n    if (userLat && userLon) {\n      const lat = parseFloat(userLat);\n      const lon = parseFloat(userLon);\n\n      // Calculate the distances and sort the stations\n      const stationsWithDistances = gasStations.map(station => {\n        // Extract the coordinates (GeoJSON format: [lon, lat])\n        const stationLon = station.geometry.coordinates[0][0];\n        const stationLat = station.geometry.coordinates[0][1];\n\n        // Calculate distance using Haversine formula\n        const distance = haversineDistance(lat, lon, stationLat, stationLon);\n        return {\n          ...station,\n          distance\n        };\n      });\n\n      // Sort the stations by distance (closest first)\n      const sortedByDistance = stationsWithDistances.sort((a, b) => a.distance - b.distance);\n      setSortedStations(sortedByDistance);\n    } else {\n      alert(\"Please enter a valid latitude and longitude.\");\n    }\n  };\n  const handleSearchChange = e => {\n    setFilterName(e.target.value); // Update the search filter\n  };\n  const renderGasStation = station => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.stationCard,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: station.properties.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tel\\xE9fono:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), \" \", station.properties.telefono || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Direcci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), \" \", station.properties.direccion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Distancia:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), \" \", station.distance.toFixed(2), \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Coordenadas:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), \" \", station.geometry.coordinates[0][0], \", \", station.geometry.coordinates[0][1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), station.properties.precio && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Precios:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gasolina Normal:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), \" \", station.properties.precio.gasolina_normal, \" EUR\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gasolina Super:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), \" \", station.properties.precio.gasolina_super, \" EUR\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gas\\xF3leo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), \" \", station.properties.precio.gasoleo, \" EUR\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, station.properties.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Filter stations by name\n  const filteredStations = sortedStations.filter(station => station.properties.nombre.toLowerCase().includes(filterName.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gasolineras en Alcoi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcStQ0SQ1Bg7mO4toLntO7O812ApmscLk5A4UQ&s\",\n      alt: \"Estaci\\xF3n de servicio\",\n      style: {\n        width: '100px',\n        height: '60px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.loading,\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.locationForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingresa tu ubicaci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLocationSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Latitud:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: userLat,\n              onChange: e => setUserLat(e.target.value),\n              required: true,\n              style: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Longitud:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: userLon,\n              onChange: e => setUserLon(e.target.value),\n              required: true,\n              style: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: styles.submitButton,\n          children: \"Buscar estaciones m\\xE1s cercanas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.searchBox,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Buscar por nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: filterName,\n        onChange: handleSearchChange,\n        placeholder: \"Escribe el nombre de la estaci\\xF3n\",\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.stationList,\n      children: filteredStations.length > 0 ? filteredStations.map(renderGasStation) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay estaciones disponibles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TpqQeknVA/hVKG7Ue7NQhUIR/zs=\");\n_c = App;\nconst styles = {\n  app: {\n    fontFamily: \"Arial, sans-serif\",\n    backgroundColor: \"#f4f4f9\",\n    padding: \"20px\",\n    textAlign: \"center\"\n  },\n  loading: {\n    color: \"#ff0000\"\n  },\n  error: {\n    color: \"#ff0000\"\n  },\n  locationForm: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#ffffff\",\n    padding: \"20px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 0 10px rgba(0, 0, 0, 0.1)\"\n  },\n  formGroup: {\n    marginBottom: \"10px\"\n  },\n  input: {\n    width: \"200px\",\n    padding: \"10px\",\n    marginTop: \"5px\",\n    fontSize: \"16px\",\n    borderRadius: \"5px\",\n    border: \"1px solid #ddd\"\n  },\n  submitButton: {\n    backgroundColor: \"#28a745\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\"\n  },\n  searchBox: {\n    marginBottom: \"20px\"\n  },\n  stationList: {\n    marginTop: \"20px\",\n    textAlign: \"left\",\n    display: \"inline-block\",\n    maxWidth: \"600px\"\n  },\n  stationCard: {\n    backgroundColor: \"#ffffff\",\n    padding: \"20px\",\n    marginBottom: \"10px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 0 10px rgba(0, 0, 0, 0.1)\"\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","gasStationsData","jsxDEV","_jsxDEV","Fragment","_Fragment","haversineDistance","lat1","lon1","lat2","lon2","R","toRad","x","Math","PI","deltaLat","deltaLon","a","sin","cos","c","atan2","sqrt","App","_s","gasStations","setGasStations","userLat","setUserLat","userLon","setUserLon","sortedStations","setSortedStations","filterName","setFilterName","loading","setLoading","error","setError","fetchData","response","get","encodeURIComponent","data","JSON","parse","contents","features","err","handleLocationSubmit","e","preventDefault","lat","parseFloat","lon","stationsWithDistances","map","station","stationLon","geometry","coordinates","stationLat","distance","sortedByDistance","sort","b","alert","handleSearchChange","target","value","renderGasStation","style","styles","stationCard","children","properties","nombre","fileName","_jsxFileName","lineNumber","columnNumber","telefono","direccion","toFixed","precio","gasolina_normal","gasolina_super","gasoleo","id","filteredStations","filter","toLowerCase","includes","app","src","alt","width","height","locationForm","onSubmit","formGroup","type","onChange","required","input","submitButton","searchBox","placeholder","stationList","length","_c","fontFamily","backgroundColor","padding","textAlign","color","marginBottom","borderRadius","boxShadow","marginTop","fontSize","border","cursor","display","maxWidth","$RefreshReg$"],"sources":["/home/chemy/gas-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport gasStationsData from './gasStationsData.json'; // Updated JSON file name\n\n// Haversine Formula to calculate the distance between two coordinates\nconst haversineDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // Earth's radius in km\n  const toRad = (x) => (x * Math.PI) / 180; // Convert degrees to radians\n\n  const deltaLat = toRad(lat2 - lat1);\n  const deltaLon = toRad(lon2 - lon1);\n\n  const a =\n    Math.sin(deltaLat / 2) * Math.sin(deltaLat / 2) +\n    Math.cos(toRad(lat1)) *\n      Math.cos(toRad(lat2)) *\n      Math.sin(deltaLon / 2) *\n      Math.sin(deltaLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  return R * c; // Distance in km\n};\n\nfunction App() {\n  const [gasStations, setGasStations] = useState([]); // List of gas stations\n  const [userLat, setUserLat] = useState(\"\"); // User's latitude\n  const [userLon, setUserLon] = useState(\"\"); // User's longitude\n  const [sortedStations, setSortedStations] = useState([]); // Sorted gas stations by distance\n  const [filterName, setFilterName] = useState(\"\"); // Search filter for gas station name\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  useEffect(() => {\n    // Fetch gas station data from the provided URL (can be a proxy if CORS is an issue)\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          \"https://api.allorigins.win/get?url=\" +\n            encodeURIComponent(\n              \"https://opendata.alcoi.org/data/dataset/eaa35b18-783f-425f-be0d-e469188b487e/resource/fb583582-0a7b-4ae1-a515-dd01d094cf72/download/gasolineras.geojson\"\n            )\n        );\n        const data = JSON.parse(response.data.contents);\n        setGasStations(data.features);\n      } catch (err) {\n        setError(\"Error loading gas stations. Falling back to local data.\");\n        setGasStations(gasStationsData.features); // Use the imported local JSON as fallback\n      }\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleLocationSubmit = (e) => {\n    e.preventDefault();\n\n    if (userLat && userLon) {\n      const lat = parseFloat(userLat);\n      const lon = parseFloat(userLon);\n\n      // Calculate the distances and sort the stations\n      const stationsWithDistances = gasStations.map((station) => {\n        // Extract the coordinates (GeoJSON format: [lon, lat])\n        const stationLon = station.geometry.coordinates[0][0];\n        const stationLat = station.geometry.coordinates[0][1];\n\n        // Calculate distance using Haversine formula\n        const distance = haversineDistance(lat, lon, stationLat, stationLon);\n\n        return { ...station, distance };\n      });\n\n      // Sort the stations by distance (closest first)\n      const sortedByDistance = stationsWithDistances.sort(\n        (a, b) => a.distance - b.distance\n      );\n\n      setSortedStations(sortedByDistance);\n    } else {\n      alert(\"Please enter a valid latitude and longitude.\");\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    setFilterName(e.target.value); // Update the search filter\n  };\n\n  const renderGasStation = (station) => {\n    return (\n      <div key={station.properties.id} style={styles.stationCard}>\n        <h3>{station.properties.nombre}</h3>\n        <p>\n          <strong>Teléfono:</strong> {station.properties.telefono || \"N/A\"}\n        </p>\n        <p>\n          <strong>Dirección:</strong> {station.properties.direccion}\n        </p>\n        <p>\n          <strong>Distancia:</strong> {station.distance.toFixed(2)} km\n        </p>\n        <p>\n          <strong>Coordenadas:</strong>{\" \"}\n          {station.geometry.coordinates[0][0]}, {station.geometry.coordinates[0][1]}\n        </p>\n\n        {/* Display prices if available */}\n        {station.properties.precio && (\n          <>\n            <h4>Precios:</h4>\n            <ul>\n              <li><strong>Gasolina Normal:</strong> {station.properties.precio.gasolina_normal} EUR</li>\n              <li><strong>Gasolina Super:</strong> {station.properties.precio.gasolina_super} EUR</li>\n              <li><strong>Gasóleo:</strong> {station.properties.precio.gasoleo} EUR</li>\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  // Filter stations by name\n  const filteredStations = sortedStations.filter((station) =>\n    station.properties.nombre.toLowerCase().includes(filterName.toLowerCase())\n  );\n\n  return (\n    <div style={styles.app}>\n      <h1>Gasolineras en Alcoi</h1>\n      <img\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcStQ0SQ1Bg7mO4toLntO7O812ApmscLk5A4UQ&s\"\n        alt=\"Estación de servicio\"\n        style={{ width: '100px', height: '60px' }}\n      />\n\n      {loading && <p style={styles.loading}>Cargando...</p>}\n      {error && <p style={styles.error}>{error}</p>}\n\n      {/* User location form */}\n      <div style={styles.locationForm}>\n        <h3>Ingresa tu ubicación:</h3>\n        <form onSubmit={handleLocationSubmit}>\n          <div style={styles.formGroup}>\n            <label>\n              Latitud:\n              <input\n                type=\"number\"\n                value={userLat}\n                onChange={(e) => setUserLat(e.target.value)}\n                required\n                style={styles.input}\n              />\n            </label>\n          </div>\n          <div style={styles.formGroup}>\n            <label>\n              Longitud:\n              <input\n                type=\"number\"\n                value={userLon}\n                onChange={(e) => setUserLon(e.target.value)}\n                required\n                style={styles.input}\n              />\n            </label>\n          </div>\n          <button type=\"submit\" style={styles.submitButton}>\n            Buscar estaciones más cercanas\n          </button>\n        </form>\n      </div>\n\n      {/* Search by name */}\n      <div style={styles.searchBox}>\n        <h3>Buscar por nombre:</h3>\n        <input\n          type=\"text\"\n          value={filterName}\n          onChange={handleSearchChange}\n          placeholder=\"Escribe el nombre de la estación\"\n          style={styles.input}\n        />\n      </div>\n\n      {/* Display the sorted and filtered stations */}\n      <div style={styles.stationList}>\n        {filteredStations.length > 0 ? (\n          filteredStations.map(renderGasStation)\n        ) : (\n          <p>No hay estaciones disponibles.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  app: {\n    fontFamily: \"Arial, sans-serif\",\n    backgroundColor: \"#f4f4f9\",\n    padding: \"20px\",\n    textAlign: \"center\",\n  },\n  loading: {\n    color: \"#ff0000\",\n  },\n  error: {\n    color: \"#ff0000\",\n  },\n  locationForm: {\n    marginBottom: \"20px\",\n    backgroundColor: \"#ffffff\",\n    padding: \"20px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\n  },\n  formGroup: {\n    marginBottom: \"10px\",\n  },\n  input: {\n    width: \"200px\",\n    padding: \"10px\",\n    marginTop: \"5px\",\n    fontSize: \"16px\",\n    borderRadius: \"5px\",\n    border: \"1px solid #ddd\",\n  },\n  submitButton: {\n    backgroundColor: \"#28a745\",\n    color: \"white\",\n    padding: \"10px 20px\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\",\n  },\n  searchBox: {\n    marginBottom: \"20px\",\n  },\n  stationList: {\n    marginTop: \"20px\",\n    textAlign: \"left\",\n    display: \"inline-block\",\n    maxWidth: \"600px\",\n  },\n  stationCard: {\n    backgroundColor: \"#ffffff\",\n    padding: \"20px\",\n    marginBottom: \"10px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\n  },\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}