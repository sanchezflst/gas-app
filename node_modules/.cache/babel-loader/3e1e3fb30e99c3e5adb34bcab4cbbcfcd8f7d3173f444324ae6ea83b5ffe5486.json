{"ast":null,"code":"// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n    if (Math.abs(Math.abs(b) - 1) < EPSLN) {\n      return 93;\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n      if (b >= 1) {\n        if (b - 1 > EPSLN) {\n          return 93;\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n      if (lat < 0) {\n        y = -y;\n      }\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n    x = this.a * (this.k0 * al * (1 + als / 6 * (1 - t + c + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c + als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) + this.x0;\n    y = this.a * (this.k0 * (ml - this.ml0 + sin_phi * delta_lon * al / 2 * (1 + als / 12 * (5 - t + 9 * c + 4 * cs + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) + this.y0;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n    if (y < 0) {\n      lat = -lat;\n    }\n    if (g === 0 && h === 0) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else {\n    // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n      lat = phi - con * ds / (1 - this.es) * 0.5 * (1 - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n      lon = adjust_lon(this.long0 + d * (1 - ds / 6 * (1 + 2 * t + c - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi);\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["pj_enfn","pj_mlfn","pj_inv_mlfn","adjust_lon","EPSLN","HALF_PI","sign","init","x0","undefined","y0","long0","lat0","es","en","ml0","Math","sin","cos","forward","p","lon","x","lat","y","delta_lon","con","sin_phi","cos_phi","b","abs","a","k0","log","sqrt","pow","acos","al","als","c","ep2","cs","tq","tan","t","ts","ml","inverse","phi","f","exp","g","temp","h","asin","atan2","tan_phi","d","ds","names"],"sources":["/home/chemy/final/node_modules/proj4/lib/projections/tmerc.js"],"sourcesContent":["// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}