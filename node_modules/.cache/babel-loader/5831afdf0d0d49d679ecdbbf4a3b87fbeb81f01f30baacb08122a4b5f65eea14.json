{"ast":null,"code":"import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + Math.asin(x * Math.tan(phi) / this.a) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["e0fn","e1fn","e2fn","e3fn","adjust_lon","adjust_lat","mlfn","EPSLN","gN","MAX_ITER","init","temp","b","a","es","Math","pow","e","sqrt","e0","e1","e2","e3","ml0","lat0","forward","p","lon","x","lat","y","el","dlon","long0","sin","sphere","abs","tan","cos","nl","x0","y0","inverse","i","al","bl","phi","dphi","tanphi","asin","cl","mln","mlnp","ma","con","names"],"sources":["/home/chemy/final/node_modules/proj4/lib/projections/poly.js"],"sourcesContent":["import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}