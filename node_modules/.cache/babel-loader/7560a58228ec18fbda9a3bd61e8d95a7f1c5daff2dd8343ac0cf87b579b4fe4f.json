{"ast":null,"code":"import adjust_lon from '../common/adjust_lon';\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + this.e2 * Math.pow(Math.cos(this.fi0), 4) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat)), this.alfa * this.e / 2);\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return p;\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n  return p;\n}\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","map":{"version":3,"names":["adjust_lon","init","a","es","e","Math","sqrt","lat0","long0","k0","s45","s90","fi0","e2","alfa","pow","cos","uq","u0","asin","sin","g","k","tan","k1","n0","s0","n","ro0","ad","forward","p","gfi","u","deltav","s","d","eps","ro","lon","x","lat","y","delta_lon","atan","czech","inverse","fi1","ok","tmp","atan2","iter","abs","names"],"sources":["/home/chemy/final/node_modules/proj4/lib/projections/krovak.js"],"sourcesContent":["import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}