{"ast":null,"code":"var _jsxFileName = \"/home/chemy/final/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport proj4 from \"proj4\"; // Import proj4 for coordinate transformation\n\n// Fórmula de Haversine para calcular la distancia entre dos coordenadas (en kilómetros)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst haversineDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // Radio de la Tierra en km\n  const toRad = x => x * Math.PI / 180; // Convertir grados a radianes\n\n  const deltaLat = toRad(lat2 - lat1);\n  const deltaLon = toRad(lon2 - lon1);\n  const a = Math.sin(deltaLat / 2) * Math.sin(deltaLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(deltaLon / 2) * Math.sin(deltaLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c; // Distancia en km\n};\nfunction App() {\n  _s();\n  const [gasStations, setGasStations] = useState([]); // Lista de estaciones de servicio\n  const [loading, setLoading] = useState(true); // Estado de carga\n  const [error, setError] = useState(null); // Estado de error\n  const [userLat, setUserLat] = useState(\"\"); // Latitud del usuario\n  const [userLon, setUserLon] = useState(\"\"); // Longitud del usuario\n  const [sortedStations, setSortedStations] = useState([]); // Estaciones ordenadas por proximidad\n  const [filterName, setFilterName] = useState(\"\"); // Filtro por nombre de estación\n\n  useEffect(() => {\n    // Usar el proxy de CORS Anywhere para evitar restricciones de CORS\n    const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    const targetUrl = \"https://opendata.alcoi.org/data/dataset/eaa35b18-783f-425f-be0d-e469188b487e/resource/fb583582-0a7b-4ae1-a515-dd01d094cf72/download/gasolineras.geojson\";\n\n    // Hacer la solicitud GET con el proxy CORS\n    axios.get(proxyUrl + targetUrl).then(response => {\n      // Convertir las coordenadas a EPSG:4326 (lat/lon)\n      const transformedStations = response.data.features.map(station => {\n        // Coordenadas en EPSG:3857 (Proyección Mercator)\n        const x = station.geometry.coordinates[0][0]; // Longitud (X)\n        const y = station.geometry.coordinates[0][1]; // Latitud (Y)\n\n        // Convertir las coordenadas a EPSG:4326 (WGS84 lat, lon)\n        const [lon, lat] = proj4(\"EPSG:3857\", \"EPSG:4326\", [x, y]);\n        return {\n          ...station,\n          geometry: {\n            ...station.geometry,\n            coordinates: [[lon, lat]] // Guardar las coordenadas transformadas\n          }\n        };\n      });\n\n      // Establecer las estaciones de servicio con coordenadas corregidas\n      setGasStations(transformedStations);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  const handleLocationSubmit = e => {\n    e.preventDefault();\n    if (userLat && userLon) {\n      const lat = parseFloat(userLat);\n      const lon = parseFloat(userLon);\n\n      // Calcular las distancias y ordenar las estaciones\n      const stationsWithDistances = gasStations.map(station => {\n        const stationLat = station.geometry.coordinates[0][1];\n        const stationLon = station.geometry.coordinates[0][0];\n        const distance = haversineDistance(lat, lon, stationLat, stationLon);\n        return {\n          ...station,\n          distance // Agregar distancia al objeto de la estación\n        };\n      });\n\n      // Ordenar estaciones por distancia (más cercanas primero)\n      const sortedByDistance = stationsWithDistances.sort((a, b) => a.distance - b.distance);\n      setSortedStations(sortedByDistance); // Establecer las estaciones ordenadas\n    } else {\n      alert(\"Por favor ingrese una latitud y longitud válidas.\");\n    }\n  };\n  const handleSearchChange = e => {\n    setFilterName(e.target.value); // Actualizar el nombre del filtro\n  };\n  const renderGasStation = station => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.stationCard,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: station.properties.nombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tel\\xE9fono:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 12\n        }, this), \" \", station.properties.telefono ? station.properties.telefono : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Direcci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 12\n        }, this), \" \", station.properties.direccion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Distancia:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 12\n        }, this), \" \", station.distance.toFixed(2), \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Coordenadas:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 12\n        }, this), \" \", station.geometry.coordinates[0][0], \", \", station.geometry.coordinates[0][1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, station.properties.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Filtrar estaciones por nombre\n  const filteredStations = sortedStations.filter(station => station.properties.nombre.toLowerCase().includes(filterName.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.app,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gasolineras en Alcoi, Alicante\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcStQ0SQ1Bg7mO4toLntO7O812ApmscLk5A4UQ&s\",\n        alt: \"Estaci\\xF3n de servicio\",\n        style: {\n          width: '100px',\n          height: '60px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.loading,\n      children: \"Cargando informaci\\xF3n...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.error,\n      children: [\"Error al cargar los datos: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.locationForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingresa tu ubicaci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLocationSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Latitud:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: userLat,\n              onChange: e => setUserLat(e.target.value),\n              required: true,\n              style: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Longitud:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: userLon,\n              onChange: e => setUserLon(e.target.value),\n              required: true,\n              style: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: styles.submitButton,\n          children: \"Buscar estaciones m\\xE1s cercanas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.searchBox,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Buscar por nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: filterName,\n        onChange: handleSearchChange,\n        placeholder: \"Escribe el nombre de la estaci\\xF3n\",\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.stationList,\n      children: filteredStations.length > 0 ? filteredStations.map(station => renderGasStation(station)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay estaciones de servicio disponibles o no ha ingresado su ubicaci\\xF3n.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PvzZThttQsG7cQdvmzc332FrBAg=\");\n_c = App;\nconst styles = {\n  app: {\n    fontFamily: \"Arial, sans-serif\",\n    backgroundColor: \"#f4f4f4\",\n    padding: \"20px\"\n  },\n  header: {\n    textAlign: \"center\",\n    marginBottom: \"20px\"\n  },\n  loading: {\n    fontSize: \"18px\",\n    textAlign: \"center\"\n  },\n  error: {\n    fontSize: \"18px\",\n    color: \"red\",\n    textAlign: \"center\"\n  },\n  locationForm: {\n    backgroundColor: \"#fff\",\n    padding: \"20px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    marginBottom: \"20px\"\n  },\n  formGroup: {\n    marginBottom: \"15px\"\n  },\n  input: {\n    width: \"100%\",\n    padding: \"8px\",\n    fontSize: \"16px\",\n    borderRadius: \"4px\",\n    border: \"1px solid #ccc\"\n  },\n  submitButton: {\n    backgroundColor: \"#4CAF50\",\n    color: \"#fff\",\n    padding: \"10px 15px\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\"\n  },\n  searchBox: {\n    marginBottom: \"20px\"\n  },\n  stationList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\"\n  },\n  stationCard: {\n    backgroundColor: \"#fff\",\n    padding: \"15px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","proj4","jsxDEV","_jsxDEV","haversineDistance","lat1","lon1","lat2","lon2","R","toRad","x","Math","PI","deltaLat","deltaLon","a","sin","cos","c","atan2","sqrt","App","_s","gasStations","setGasStations","loading","setLoading","error","setError","userLat","setUserLat","userLon","setUserLon","sortedStations","setSortedStations","filterName","setFilterName","proxyUrl","targetUrl","get","then","response","transformedStations","data","features","map","station","geometry","coordinates","y","lon","lat","catch","handleLocationSubmit","e","preventDefault","parseFloat","stationsWithDistances","stationLat","stationLon","distance","sortedByDistance","sort","b","alert","handleSearchChange","target","value","renderGasStation","style","styles","stationCard","children","properties","nombre","fileName","_jsxFileName","lineNumber","columnNumber","telefono","direccion","toFixed","id","filteredStations","filter","toLowerCase","includes","app","header","src","alt","width","height","message","locationForm","onSubmit","formGroup","type","onChange","required","input","submitButton","searchBox","placeholder","stationList","length","_c","fontFamily","backgroundColor","padding","textAlign","marginBottom","fontSize","color","borderRadius","boxShadow","border","cursor","display","flexDirection","gap","$RefreshReg$"],"sources":["/home/chemy/final/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport proj4 from \"proj4\"; // Import proj4 for coordinate transformation\n\n// Fórmula de Haversine para calcular la distancia entre dos coordenadas (en kilómetros)\nconst haversineDistance = (lat1, lon1, lat2, lon2) => {\n  const R = 6371; // Radio de la Tierra en km\n  const toRad = (x) => (x * Math.PI) / 180; // Convertir grados a radianes\n\n  const deltaLat = toRad(lat2 - lat1);\n  const deltaLon = toRad(lon2 - lon1);\n\n  const a =\n    Math.sin(deltaLat / 2) * Math.sin(deltaLat / 2) +\n    Math.cos(toRad(lat1)) *\n      Math.cos(toRad(lat2)) *\n      Math.sin(deltaLon / 2) *\n      Math.sin(deltaLon / 2);\n\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  return R * c; // Distancia en km\n};\n\nfunction App() {\n  const [gasStations, setGasStations] = useState([]); // Lista de estaciones de servicio\n  const [loading, setLoading] = useState(true); // Estado de carga\n  const [error, setError] = useState(null); // Estado de error\n  const [userLat, setUserLat] = useState(\"\"); // Latitud del usuario\n  const [userLon, setUserLon] = useState(\"\"); // Longitud del usuario\n  const [sortedStations, setSortedStations] = useState([]); // Estaciones ordenadas por proximidad\n  const [filterName, setFilterName] = useState(\"\"); // Filtro por nombre de estación\n\n  useEffect(() => {\n    // Usar el proxy de CORS Anywhere para evitar restricciones de CORS\n    const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n    const targetUrl = \"https://opendata.alcoi.org/data/dataset/eaa35b18-783f-425f-be0d-e469188b487e/resource/fb583582-0a7b-4ae1-a515-dd01d094cf72/download/gasolineras.geojson\";\n\n    // Hacer la solicitud GET con el proxy CORS\n    axios\n      .get(proxyUrl + targetUrl)\n      .then((response) => {\n        // Convertir las coordenadas a EPSG:4326 (lat/lon)\n        const transformedStations = response.data.features.map((station) => {\n          // Coordenadas en EPSG:3857 (Proyección Mercator)\n          const x = station.geometry.coordinates[0][0]; // Longitud (X)\n          const y = station.geometry.coordinates[0][1]; // Latitud (Y)\n\n          // Convertir las coordenadas a EPSG:4326 (WGS84 lat, lon)\n          const [lon, lat] = proj4(\"EPSG:3857\", \"EPSG:4326\", [x, y]);\n\n          return {\n            ...station,\n            geometry: {\n              ...station.geometry,\n              coordinates: [[lon, lat]], // Guardar las coordenadas transformadas\n            },\n          };\n        });\n\n        // Establecer las estaciones de servicio con coordenadas corregidas\n        setGasStations(transformedStations);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setError(error);\n        setLoading(false);\n      });\n  }, []);\n\n  const handleLocationSubmit = (e) => {\n    e.preventDefault();\n\n    if (userLat && userLon) {\n      const lat = parseFloat(userLat);\n      const lon = parseFloat(userLon);\n\n      // Calcular las distancias y ordenar las estaciones\n      const stationsWithDistances = gasStations.map((station) => {\n        const stationLat = station.geometry.coordinates[0][1];\n        const stationLon = station.geometry.coordinates[0][0];\n        const distance = haversineDistance(lat, lon, stationLat, stationLon);\n\n        return {\n          ...station,\n          distance, // Agregar distancia al objeto de la estación\n        };\n      });\n\n      // Ordenar estaciones por distancia (más cercanas primero)\n      const sortedByDistance = stationsWithDistances.sort((a, b) => a.distance - b.distance);\n\n      setSortedStations(sortedByDistance); // Establecer las estaciones ordenadas\n    } else {\n      alert(\"Por favor ingrese una latitud y longitud válidas.\");\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    setFilterName(e.target.value); // Actualizar el nombre del filtro\n  };\n\n  const renderGasStation = (station) => {\n    return (\n      <div key={station.properties.id} style={styles.stationCard}>\n        <h3>{station.properties.nombre}</h3>\n        <p><strong>Teléfono:</strong> {station.properties.telefono ? station.properties.telefono : \"N/A\"}</p>\n        <p><strong>Dirección:</strong> {station.properties.direccion}</p>\n        <p><strong>Distancia:</strong> {station.distance.toFixed(2)} km</p>\n        <p><strong>Coordenadas:</strong> {station.geometry.coordinates[0][0]}, {station.geometry.coordinates[0][1]}</p>\n      </div>\n    );\n  };\n\n  // Filtrar estaciones por nombre\n  const filteredStations = sortedStations.filter((station) =>\n    station.properties.nombre.toLowerCase().includes(filterName.toLowerCase())\n  );\n\n  return (\n    <div style={styles.app}>\n      <div style={styles.header}>\n        <h1>Gasolineras en Alcoi, Alicante</h1>\n        <img\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcStQ0SQ1Bg7mO4toLntO7O812ApmscLk5A4UQ&s\"\n          alt=\"Estación de servicio\"\n          style={{ width: '100px', height: '60px' }}\n        />\n      </div>\n\n      {loading && <p style={styles.loading}>Cargando información...</p>}\n      {error && <p style={styles.error}>Error al cargar los datos: {error.message}</p>}\n\n      {/* Formulario para ingresar la ubicación del usuario */}\n      <div style={styles.locationForm}>\n        <h3>Ingresa tu ubicación:</h3>\n        <form onSubmit={handleLocationSubmit}>\n          <div style={styles.formGroup}>\n            <label>\n              Latitud:\n              <input\n                type=\"number\"\n                value={userLat}\n                onChange={(e) => setUserLat(e.target.value)}\n                required\n                style={styles.input}\n              />\n            </label>\n          </div>\n          <div style={styles.formGroup}>\n            <label>\n              Longitud:\n              <input\n                type=\"number\"\n                value={userLon}\n                onChange={(e) => setUserLon(e.target.value)}\n                required\n                style={styles.input}\n              />\n            </label>\n          </div>\n          <button type=\"submit\" style={styles.submitButton}>Buscar estaciones más cercanas</button>\n        </form>\n      </div>\n\n      {/* Filtro por nombre de estación */}\n      <div style={styles.searchBox}>\n        <h3>Buscar por nombre:</h3>\n        <input\n          type=\"text\"\n          value={filterName}\n          onChange={handleSearchChange}\n          placeholder=\"Escribe el nombre de la estación\"\n          style={styles.input}\n        />\n      </div>\n\n      {/* Mostrar estaciones ordenadas por proximidad */}\n      <div style={styles.stationList}>\n        {filteredStations.length > 0 ? (\n          filteredStations.map((station) => renderGasStation(station))\n        ) : (\n          <p>No hay estaciones de servicio disponibles o no ha ingresado su ubicación.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  app: {\n    fontFamily: \"Arial, sans-serif\",\n    backgroundColor: \"#f4f4f4\",\n    padding: \"20px\",\n  },\n  header: {\n    textAlign: \"center\",\n    marginBottom: \"20px\",\n  },\n  loading: {\n    fontSize: \"18px\",\n    textAlign: \"center\",\n  },\n  error: {\n    fontSize: \"18px\",\n    color: \"red\",\n    textAlign: \"center\",\n  },\n  locationForm: {\n    backgroundColor: \"#fff\",\n    padding: \"20px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n    marginBottom: \"20px\",\n  },\n  formGroup: {\n    marginBottom: \"15px\",\n  },\n  input: {\n    width: \"100%\",\n    padding: \"8px\",\n    fontSize: \"16px\",\n    borderRadius: \"4px\",\n    border: \"1px solid #ccc\",\n  },\n  submitButton: {\n    backgroundColor: \"#4CAF50\",\n    color: \"#fff\",\n    padding: \"10px 15px\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    fontSize: \"16px\",\n  },\n  searchBox: {\n    marginBottom: \"20px\",\n  },\n  stationList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\",\n  },\n  stationCard: {\n    backgroundColor: \"#fff\",\n    padding: \"15px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n  },\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}